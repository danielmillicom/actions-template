name: Pipeline Python template

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Cloning repo in runner
        uses: actions/checkout@v2          
      - name: Setup environment
        run: |
          echo "Downloading the python dependencies"
          pip install --no-cache-dir -r requirements.txt
          echo "Raising the server"
          uvicorn app.business.app:app --reload &
          sleep 5
          echo "Server ready for requests"
  unit-test:
    runs-on: ubuntu-latest
    needs: ["ci"]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Create docker image
        run: echo "Unit test"
  build-and-upload-image:
    runs-on: ubuntu-latest
    needs: ["unit-test"]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGRISTRY}}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


          
#  -data '{"msg": "seed python"}' -H 'Ce-Id: 536808d3-88be-4077-9d7a-a3f162705f79' 'Ce-specversion: 0.3' -H 'Ce-Type: dev.knative.samples.helloworld' -H 'Ce-Source: dev.knative.samples/helloworldsource' -H 'Content-Type: application/json' http://127.0.0.1:8000/

  # cd: 
  #   runs-on: windows-latest
  #   needs: ["ci"]
  #   steps:
  #     - name: Create docker image
  #       run: echo "Generadno la imagen de docker"
  
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: ["cd"]
  #   steps:
  #     - name: Deploy image to knative
  #       run: echo "Desplegando imagen"

                                                       